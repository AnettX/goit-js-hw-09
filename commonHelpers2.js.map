{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-form.js"],"sourcesContent":["// 1. Використовуючи делегуваня, відстежуй на формі подію input і щоразу записуй у локальне сховище об'єкт з полями email і message,\n// у яких зберігай поточні значення полів форми.Нехай ключем для сховища буде рядок \"feedback-form-state\".\n\n// 2. Під час завантаження сторінки перевіряй стан сховища, і якщо там є збережені дані, то заповнюй ними поля форми.\n// В іншому випадку поля повинні бути порожніми.\n\n// 3. Під час сабміту форми очищай сховище і поля форми, а також виводь у консоль об'єкт з полями email, message та їхніми поточними значеннями.\n\nconst STORAGE_KEY = 'feedback-msg';\n\nconst form = document.querySelector('.js-feedback-form');\n\nform.addEventListener('input', (e) => {\n    validateAndSaveToLS();\n});\n\n\nform.addEventListener('submit', (e) => {\n    e.preventDefault();\n     if (isFormValid()) {\n        const data = loadFromLS(STORAGE_KEY) || {};\n        form.reset();\n        localStorage.removeItem(STORAGE_KEY);\n        console.log(data);\n    } else {\n        console.log('Потрібно заповнити всі поля');\n    }\n});\n\nfunction validateAndSaveToLS() {\n    const userEmail = form.elements.email.value.trim();\n    const userMessage = form.elements.message.value.trim();\n\n    if (userEmail || userMessage) {\n        const data = { email: userEmail, message: userMessage };\n        saveToLS(STORAGE_KEY, data);\n    }\n}\n\nfunction isFormValid() {\n    const userEmail = form.elements.email.value.trim();\n    const userMessage = form.elements.message.value.trim();\n\n    return userEmail && userMessage;\n}\n\nfunction saveToLS(key = 'empty', value = '') {\n    const jsonData = JSON.stringify(value);\n    localStorage.setItem(key, jsonData);\n}\n\nfunction loadFromLS(key) {\n    const data = localStorage.getItem(key);\n    try {\n        const result = JSON.parse(data);\n        return result;\n    } catch (error) {\n        return data;\n    }\n}\n\nfunction restoreData() {\n    const data = loadFromLS(STORAGE_KEY) || {};\n    form.elements.email.value = data.email || '';\n    form.elements.message.value = data.message || '';\n}\nrestoreData();\n"],"names":["STORAGE_KEY","form","validateAndSaveToLS","isFormValid","data","loadFromLS","userEmail","userMessage","saveToLS","key","value","jsonData","restoreData"],"mappings":"wFAQA,MAAMA,EAAc,eAEdC,EAAO,SAAS,cAAc,mBAAmB,EAEvDA,EAAK,iBAAiB,QAAU,GAAM,CAClCC,GACJ,CAAC,EAGDD,EAAK,iBAAiB,SAAW,GAAM,CAElC,GADD,EAAE,eAAc,EACXE,EAAW,EAAI,CAChB,MAAMC,EAAOC,EAAWL,CAAW,GAAK,CAAA,EACxCC,EAAK,MAAK,EACV,aAAa,WAAWD,CAAW,EACnC,QAAQ,IAAII,CAAI,CACxB,MACQ,QAAQ,IAAI,6BAA6B,CAEjD,CAAC,EAED,SAASF,GAAsB,CAC3B,MAAMI,EAAYL,EAAK,SAAS,MAAM,MAAM,OACtCM,EAAcN,EAAK,SAAS,QAAQ,MAAM,QAE5CK,GAAaC,IAEbC,EAASR,EADI,CAAE,MAAOM,EAAW,QAASC,CAAW,CAC3B,CAElC,CAEA,SAASJ,GAAc,CACnB,MAAMG,EAAYL,EAAK,SAAS,MAAM,MAAM,OACtCM,EAAcN,EAAK,SAAS,QAAQ,MAAM,OAEhD,OAAOK,GAAaC,CACxB,CAEA,SAASC,EAASC,EAAM,QAASC,EAAQ,GAAI,CACzC,MAAMC,EAAW,KAAK,UAAUD,CAAK,EACrC,aAAa,QAAQD,EAAKE,CAAQ,CACtC,CAEA,SAASN,EAAWI,EAAK,CACrB,MAAML,EAAO,aAAa,QAAQK,CAAG,EACrC,GAAI,CAEA,OADe,KAAK,MAAML,CAAI,CAEjC,MAAC,CACE,OAAOA,CACV,CACL,CAEA,SAASQ,GAAc,CACnB,MAAMR,EAAOC,EAAWL,CAAW,GAAK,CAAA,EACxCC,EAAK,SAAS,MAAM,MAAQG,EAAK,OAAS,GAC1CH,EAAK,SAAS,QAAQ,MAAQG,EAAK,SAAW,EAClD,CACAQ,EAAa"}